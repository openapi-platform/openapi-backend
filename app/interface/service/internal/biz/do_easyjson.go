// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package biz

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz(in *jlexer.Lexer, out *UserSearchMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "username":
			out.Username = string(in.String())
		case "introduce":
			out.Introduce = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz(out *jwriter.Writer, in UserSearchMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix[1:])
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"introduce\":"
		out.RawString(prefix)
		out.String(string(in.Introduce))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserSearchMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserSearchMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserSearchMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserSearchMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz1(in *jlexer.Lexer, out *SetFollowMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "uuid":
			out.Uuid = string(in.String())
		case "userId":
			out.UserId = string(in.String())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz1(out *jwriter.Writer, in SetFollowMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix[1:])
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"userId\":"
		out.RawString(prefix)
		out.String(string(in.UserId))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SetFollowMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SetFollowMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SetFollowMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SetFollowMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz1(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz2(in *jlexer.Lexer, out *SendUserStatisticMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "follow":
			out.Follow = string(in.String())
		case "followed":
			out.Followed = string(in.String())
		case "mode":
			out.Mode = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz2(out *jwriter.Writer, in SendUserStatisticMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"follow\":"
		out.RawString(prefix[1:])
		out.String(string(in.Follow))
	}
	{
		const prefix string = ",\"followed\":"
		out.RawString(prefix)
		out.String(string(in.Followed))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SendUserStatisticMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SendUserStatisticMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SendUserStatisticMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SendUserStatisticMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz2(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz3(in *jlexer.Lexer, out *ProfileUpdateMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "username":
			out.Username = string(in.String())
		case "introduce":
			out.Introduce = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz3(out *jwriter.Writer, in ProfileUpdateMap) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix[1:])
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"introduce\":"
		out.RawString(prefix)
		out.String(string(in.Introduce))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ProfileUpdateMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ProfileUpdateMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ProfileUpdateMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ProfileUpdateMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz3(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz4(in *jlexer.Lexer, out *ProfileUpdate) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "mode":
			out.Mode = string(in.String())
		case "status":
			out.Status = int32(in.Int32())
		case "created":
			out.Created = string(in.String())
		case "updated":
			out.Updated = string(in.String())
		case "uuid":
			out.Uuid = string(in.String())
		case "username":
			out.Username = string(in.String())
		case "avatar":
			out.Avatar = string(in.String())
		case "school":
			out.School = string(in.String())
		case "company":
			out.Company = string(in.String())
		case "job":
			out.Job = string(in.String())
		case "homepage":
			out.Homepage = string(in.String())
		case "github":
			out.Github = string(in.String())
		case "gitee":
			out.Gitee = string(in.String())
		case "introduce":
			out.Introduce = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz4(out *jwriter.Writer, in ProfileUpdate) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix[1:])
		out.String(string(in.Mode))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.Int32(int32(in.Status))
	}
	{
		const prefix string = ",\"created\":"
		out.RawString(prefix)
		out.String(string(in.Created))
	}
	{
		const prefix string = ",\"updated\":"
		out.RawString(prefix)
		out.String(string(in.Updated))
	}
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix)
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"avatar\":"
		out.RawString(prefix)
		out.String(string(in.Avatar))
	}
	{
		const prefix string = ",\"school\":"
		out.RawString(prefix)
		out.String(string(in.School))
	}
	{
		const prefix string = ",\"company\":"
		out.RawString(prefix)
		out.String(string(in.Company))
	}
	{
		const prefix string = ",\"job\":"
		out.RawString(prefix)
		out.String(string(in.Job))
	}
	{
		const prefix string = ",\"homepage\":"
		out.RawString(prefix)
		out.String(string(in.Homepage))
	}
	{
		const prefix string = ",\"github\":"
		out.RawString(prefix)
		out.String(string(in.Github))
	}
	{
		const prefix string = ",\"gitee\":"
		out.RawString(prefix)
		out.String(string(in.Gitee))
	}
	{
		const prefix string = ",\"introduce\":"
		out.RawString(prefix)
		out.String(string(in.Introduce))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ProfileUpdate) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ProfileUpdate) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ProfileUpdate) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ProfileUpdate) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz4(l, v)
}
func easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz5(in *jlexer.Lexer, out *ImageReview) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.Id = int32(in.Int32())
		case "createAt":
			out.CreateAt = string(in.String())
		case "uuid":
			out.Uuid = string(in.String())
		case "jobId":
			out.JobId = string(in.String())
		case "url":
			out.Url = string(in.String())
		case "label":
			out.Label = string(in.String())
		case "result":
			out.Result = int32(in.Int32())
		case "category":
			out.Category = string(in.String())
		case "subLabel":
			out.SubLabel = string(in.String())
		case "mode":
			out.Mode = string(in.String())
		case "score":
			out.Score = int32(in.Int32())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz5(out *jwriter.Writer, in ImageReview) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int32(int32(in.Id))
	}
	{
		const prefix string = ",\"createAt\":"
		out.RawString(prefix)
		out.String(string(in.CreateAt))
	}
	{
		const prefix string = ",\"uuid\":"
		out.RawString(prefix)
		out.String(string(in.Uuid))
	}
	{
		const prefix string = ",\"jobId\":"
		out.RawString(prefix)
		out.String(string(in.JobId))
	}
	{
		const prefix string = ",\"url\":"
		out.RawString(prefix)
		out.String(string(in.Url))
	}
	{
		const prefix string = ",\"label\":"
		out.RawString(prefix)
		out.String(string(in.Label))
	}
	{
		const prefix string = ",\"result\":"
		out.RawString(prefix)
		out.Int32(int32(in.Result))
	}
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix)
		out.String(string(in.Category))
	}
	{
		const prefix string = ",\"subLabel\":"
		out.RawString(prefix)
		out.String(string(in.SubLabel))
	}
	{
		const prefix string = ",\"mode\":"
		out.RawString(prefix)
		out.String(string(in.Mode))
	}
	{
		const prefix string = ",\"score\":"
		out.RawString(prefix)
		out.Int32(int32(in.Score))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ImageReview) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ImageReview) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson899f4d6bEncodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ImageReview) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ImageReview) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson899f4d6bDecodeGithubComTheZionMatrixCoreAppUserServiceInternalBiz5(l, v)
}
